{"ast":null,"code":"var _jsxFileName = \"H:\\\\01.GitHub\\\\17.React\\\\MyReactProject\\\\sqllite-db\\\\src\\\\DataDB\\\\ItemManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport db from './db';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemManager() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [name, setName] = useState('');\n\n  //   useEffect(() => {\n  //     // 데이터베이스에서 항목 가져오기\n  //     console.log('모야.');\n  //     db.all(\"SELECT * FROM items\", (err, rows) => {\n  //       if (err) {\n  //         console.error(err.message);\n  //       } else {\n  //         setItems(rows);\n  //       }\n  //     });\n  //   }, []);\n\n  //   const handleAddItem = () => {\n  //     // 데이터베이스에 항목 추가\n  //     db.run(\"INSERT INTO items (name) VALUES (?)\", [name], (err) => {\n  //       if (err) {\n  //         console.error(err.message);\n  //       } else {\n  //         setItems([...items, { name }]);\n  //         setName('');\n  //       }\n  //     });\n  //   };\n\n  //   const handleDeleteItem = (id) => {\n  //     // 데이터베이스에서 항목 삭제\n  //     db.run(\"DELETE FROM items WHERE id = ?\", [id], (err) => {\n  //       if (err) {\n  //         console.error(err.message);\n  //       } else {\n  //         setItems(items.filter(item => item.id !== id));\n  //       }\n  //     });\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD56D\\uBAA9 \\uAD00\\uB9AC\\uC790\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ItemManager, \"hu5s6C9OIjO2F54qh6UJ7YefYCE=\");\n_c = ItemManager;\nexport default ItemManager;\nvar _c;\n$RefreshReg$(_c, \"ItemManager\");","map":{"version":3,"names":["React","useState","useEffect","db","jsxDEV","_jsxDEV","ItemManager","_s","items","setItems","name","setName","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["H:/01.GitHub/17.React/MyReactProject/sqllite-db/src/DataDB/ItemManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport db from './db';\r\n\r\nfunction ItemManager() {\r\n  const [items, setItems] = useState([]);\r\n  const [name, setName] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     // 데이터베이스에서 항목 가져오기\r\n//     console.log('모야.');\r\n//     db.all(\"SELECT * FROM items\", (err, rows) => {\r\n//       if (err) {\r\n//         console.error(err.message);\r\n//       } else {\r\n//         setItems(rows);\r\n//       }\r\n//     });\r\n//   }, []);\r\n\r\n//   const handleAddItem = () => {\r\n//     // 데이터베이스에 항목 추가\r\n//     db.run(\"INSERT INTO items (name) VALUES (?)\", [name], (err) => {\r\n//       if (err) {\r\n//         console.error(err.message);\r\n//       } else {\r\n//         setItems([...items, { name }]);\r\n//         setName('');\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   const handleDeleteItem = (id) => {\r\n//     // 데이터베이스에서 항목 삭제\r\n//     db.run(\"DELETE FROM items WHERE id = ?\", [id], (err) => {\r\n//       if (err) {\r\n//         console.error(err.message);\r\n//       } else {\r\n//         setItems(items.filter(item => item.id !== id));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      <h2>항목 관리자</h2>\r\n      {/* <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n      <button onClick={handleAddItem}>항목 추가</button>\r\n      <ul>\r\n        {items.map(item => (\r\n          <li key={item.id}>\r\n            {item.name}\r\n            <button onClick={() => handleDeleteItem(item.id)}>삭제</button>\r\n          </li>\r\n        ))}\r\n      </ul> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemManager;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACEI,OAAA;IAAAO,QAAA,eACEP,OAAA;MAAAO,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAWZ,CAAC;AAEV;AAACT,EAAA,CAtDQD,WAAW;AAAAW,EAAA,GAAXX,WAAW;AAwDpB,eAAeA,WAAW;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}