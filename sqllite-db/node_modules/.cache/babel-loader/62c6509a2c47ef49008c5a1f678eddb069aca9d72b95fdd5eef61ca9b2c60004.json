{"ast":null,"code":"var _jsxFileName = \"H:\\\\01.GitHub\\\\17.React\\\\MyReactProject\\\\sqllite-db\\\\src\\\\DataDB\\\\ItemManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport db from './db';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemManager() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [name, setName] = useState('');\n  console.log('모.');\n  useEffect(() => {\n    // 데이터베이스에서 항목 가져오기\n    console.log('모야.');\n    db.all(\"SELECT * FROM items\", (err, rows) => {\n      if (err) {\n        console.error(err.message);\n      } else {\n        setItems(rows);\n      }\n    });\n  }, []);\n  const handleAddItem = () => {\n    // 데이터베이스에 항목 추가\n    db.run(\"INSERT INTO items (name) VALUES (?)\", [name], err => {\n      if (err) {\n        console.error(err.message);\n      } else {\n        setItems([...items, {\n          name\n        }]);\n        setName('');\n      }\n    });\n  };\n  const handleDeleteItem = id => {\n    // 데이터베이스에서 항목 삭제\n    db.run(\"DELETE FROM items WHERE id = ?\", [id], err => {\n      if (err) {\n        console.error(err.message);\n      } else {\n        setItems(items.filter(item => item.id !== id));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD56D\\uBAA9 \\uAD00\\uB9AC\\uC790\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddItem,\n      children: \"\\uD56D\\uBAA9 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteItem(item.id),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ItemManager, \"N7YVLbHe0w6AAc7/X3nmrAfk3NM=\");\n_c = ItemManager;\nexport default ItemManager;\nvar _c;\n$RefreshReg$(_c, \"ItemManager\");","map":{"version":3,"names":["React","useState","useEffect","db","jsxDEV","_jsxDEV","ItemManager","_s","items","setItems","name","setName","console","log","all","err","rows","error","message","handleAddItem","run","handleDeleteItem","id","filter","item","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["H:/01.GitHub/17.React/MyReactProject/sqllite-db/src/DataDB/ItemManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport db from './db';\r\n\r\nfunction ItemManager() {\r\n  const [items, setItems] = useState([]);\r\n  const [name, setName] = useState('');\r\n  console.log('모.');\r\n  useEffect(() => {\r\n    // 데이터베이스에서 항목 가져오기\r\n    console.log('모야.');\r\n    db.all(\"SELECT * FROM items\", (err, rows) => {\r\n      if (err) {\r\n        console.error(err.message);\r\n      } else {\r\n        setItems(rows);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleAddItem = () => {\r\n    // 데이터베이스에 항목 추가\r\n    db.run(\"INSERT INTO items (name) VALUES (?)\", [name], (err) => {\r\n      if (err) {\r\n        console.error(err.message);\r\n      } else {\r\n        setItems([...items, { name }]);\r\n        setName('');\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDeleteItem = (id) => {\r\n    // 데이터베이스에서 항목 삭제\r\n    db.run(\"DELETE FROM items WHERE id = ?\", [id], (err) => {\r\n      if (err) {\r\n        console.error(err.message);\r\n      } else {\r\n        setItems(items.filter(item => item.id !== id));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>항목 관리자</h2>\r\n      <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n      <button onClick={handleAddItem}>항목 추가</button>\r\n      <ul>\r\n        {items.map(item => (\r\n          <li key={item.id}>\r\n            {item.name}\r\n            <button onClick={() => handleDeleteItem(item.id)}>삭제</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}